definitions:
  api.Comment:
    properties:
      content:
        description: Contenido del comentario
        type: string
      createdAt:
        description: Fecha de creación
        type: string
      id:
        description: ID único del comentario
        type: integer
      taskID:
        description: Tarea asociada
        type: integer
      userID:
        description: Usuario que hizo el comentario
        type: integer
    type: object
  api.CreateTaskRequest:
    properties:
      assigned_to:
        description: Usuario asignado
        type: integer
      created_by:
        description: Usuario que creó la tarea
        type: integer
      description:
        description: Descripción detallada
        type: string
      due_date:
        description: Fecha límite de la tarea
        type: string
      priority:
        description: Prioridad (low, medium, high)
        type: string
      status:
        description: Estado (pending, in_progress, completed)
        type: string
      title:
        description: Título de la tarea
        type: string
    required:
    - created_by
    - priority
    - status
    - title
    type: object
  api.RegisterUserRequest:
    properties:
      email:
        description: Correo electrónico
        type: string
      name:
        description: Nombre del usuario
        type: string
      password:
        description: Contraseña en texto plano
        type: string
    required:
    - email
    - name
    - password
    type: object
  api.Task:
    properties:
      assignedTo:
        description: Usuario asignado
        type: integer
      comments:
        description: Comentarios asociados a la tarea
        items:
          $ref: '#/definitions/api.Comment'
        type: array
      createdAt:
        description: Fecha de creación
        type: string
      createdBy:
        description: Usuario que creó la tarea
        type: integer
      description:
        description: Descripción detallada
        type: string
      dueDate:
        description: Fecha límite de la tarea
        type: string
      id:
        description: ID único de la tarea
        type: integer
      priority:
        description: Prioridad (low, medium, high)
        type: string
      status:
        description: Estado (pending, in_progress, completed)
        type: string
      title:
        description: Título de la tarea
        type: string
      updatedAt:
        description: Fecha de última actualización
        type: string
    type: object
  api.User:
    properties:
      assignedTasks:
        description: Tareas asignadas al usuario
        items:
          $ref: '#/definitions/api.Task'
        type: array
      comments:
        description: Comentarios hechos por el usuario
        items:
          $ref: '#/definitions/api.Comment'
        type: array
      createdAt:
        description: Fecha de creación
        type: string
      email:
        description: Correo electrónico (único)
        type: string
      id:
        description: ID único del usuario
        type: integer
      name:
        description: Nombre del usuario
        type: string
      passwordHash:
        description: Hash de la contraseña
        type: string
      tasks:
        description: Tareas creadas por el usuario
        items:
          $ref: '#/definitions/api.Task'
        type: array
      updatedAt:
        description: Fecha de última actualización
        type: string
    type: object
info:
  contact: {}
paths:
  /createTask:
    post:
      consumes:
      - application/json
      description: Crea una nueva tarea en el sistema
      parameters:
      - description: Datos de la tarea
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/api.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.CreateTaskRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crear una nueva tarea
      tags:
      - tasks
  /getAllTasks:
    get:
      consumes:
      - application/json
      description: Obtiene una lista de todas las tareas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener todas las tareas
      tags:
      - tasks
  /getAllUsers:
    get:
      consumes:
      - application/json
      description: Obtiene una lista de todos los usuarios
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener todos los usuarios
      tags:
      - users
  /getTasksById/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene una tarea específica por su ID
      parameters:
      - description: ID de la tarea
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener una tarea por ID
      tags:
      - tasks
  /tasks/{id}/comments:
    post:
      consumes:
      - application/json
      description: Crea un nuevo comentario en una tarea
      parameters:
      - description: ID de la tarea
        in: path
        name: id
        required: true
        type: integer
      - description: Datos del comentario
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/api.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Comment'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crear un nuevo comentario
      tags:
      - comments
  /tasks/{id}/getComments:
    get:
      consumes:
      - application/json
      description: Obtiene una lista de comentarios asociados a una tarea específica
      parameters:
      - description: ID de la tarea
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Comment'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener comentarios por ID de tarea
      tags:
      - comments
  /updateTasks/{id}:
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una tarea existente
      parameters:
      - description: ID de la tarea
        in: path
        name: id
        required: true
        type: integer
      - description: Datos actualizados de la tarea
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/api.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Actualizar una tarea
      tags:
      - tasks
  /users:
    post:
      consumes:
      - application/json
      description: Crea un nuevo usuario en el sistema
      parameters:
      - description: Datos del usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registrar un nuevo usuario
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Autentica a un usuario y devuelve un token JWT
      parameters:
      - description: Credenciales (email y contraseña)
        in: body
        name: credentials
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Iniciar sesión
      tags:
      - users
swagger: "2.0"
